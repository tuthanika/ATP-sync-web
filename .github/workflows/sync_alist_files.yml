name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 关闭快速失败策略
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: amd64
          - os: ubuntu-22.04
            platform: linux
            arch: 386
          - os: ubuntu-22.04
            platform: linux
            arch: armv6
          - os: ubuntu-22.04
            platform: linux
            arch: armv7
          - os: ubuntu-22.04
            platform: linux
            arch: arm64
          - os: macos-12
            platform: macos
            arch: x64
          - os: windows-2022
            platform: win
            arch: amd64

    steps:
    - name: Setup QEMU (ARM)
      if: contains(matrix.arch, 'arm') && matrix.platform == 'linux'
      uses: docker/setup-qemu-action@v2

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies (Linux)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev libffi-dev

    - name: Install system dependencies (macOS)
      if: matrix.platform == 'macos'
      run: |
        brew install openssl libffi

    - name: Install system dependencies (Windows)
      if: matrix.platform == 'win'
      run: |
        choco install -y openssl

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --onefile --name alist-sync-web \
          --add-data 'static:static' \
          --add-data 'templates:templates' \
          --add-data 'VERSION:.' \
          alist-sync-web.py
        
        # 动态生成文件名
        OUTPUT_NAME="alist-sync-web-${{ matrix.platform }}-${{ matrix.arch }}"
        if [ "${{ matrix.platform }}" = "win" ]; then
          mv dist/alist-sync-web.exe "dist/${OUTPUT_NAME}.exe"
        else
          mv dist/alist-sync-web "dist/${OUTPUT_NAME}"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.platform }}-${{ matrix.arch }}  # 唯一artifact名称
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        find artifacts/ -type f -exec cp {} release-assets/ \;

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          Multi-platform builds for ${{ github.ref_name }}
          Supported platforms:
          - Linux (386, amd64, armv6, armv7, arm64)
          - macOS (x64)
          - Windows (amd64)
        files: release-assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}