name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]

permissions:
  contents: write
  packages: write

env:
  PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(env.PLATFORMS) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare build environment
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          target: builder
          outputs: type=local,dest=./build

      - name: Build with PyInstaller
        run: |
          # 根据平台处理架构标识符
          ARCH=$(echo "${{ matrix.platform }}" | cut -d'/' -f2)
          case $ARCH in
            arm/v6) ARCH=armv6 ;;
            arm/v7) ARCH=armv7 ;;
            *) ;;
          esac
          
          docker run --rm -v $(pwd):/app -w /app \ 
            ${{ matrix.platform }}python:3.10-alpine \
            sh -c "apk add build-base zlib-dev libffi-dev && \
            pip install pyinstaller && \
            pyinstaller --onefile --name alist-sync-${ARCH} alist-sync-web.py"

      - name: Package artifacts
        run: |
          ARCH=$(echo "${{ matrix.platform }}" | cut -d'/' -f2 | sed 's/\//-/g')
          mkdir -p release
          tar czvf release/alist-sync-${ARCH}.tar.gz -C dist .

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}