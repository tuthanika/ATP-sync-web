name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            qemu_arch: x86_64
          - arch: arm64
            platform: linux/arm64
            qemu_arch: aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: ${{ matrix.platform }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
        platforms: ${{ matrix.platform }}

    - name: Build binary
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: ${{ matrix.platform }}
        outputs: type=local,dest=dist
        build-args: |
          TARGETARCH=${{ matrix.arch }}

    - name: Verify binary architecture
      run: |
        file dist/alist-sync-web-*
        # 强制架构检查
        if ! readelf -h dist/alist-sync-web-* | grep -q "Machine:.*AArch64"; then
          echo "ERROR: Binary architecture mismatch!"
          exit 1
        fi

    - name: Rename artifacts
      run: |
        cd dist
        mv alist-sync-web alist-sync-web-linux-${{ matrix.arch }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-linux-${{ matrix.arch }}
        path: dist/alist-sync-web-linux-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          ARM64 Build Verification:
          ```bash
          file alist-sync-web-linux-arm64 | grep "ARM aarch64"
          ```
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}